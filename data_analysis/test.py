import pandas as pd
import numpy as np
import pickle
from database_fxns import *
from analysis_fxns import *
from plotting_fxns import *
from model_fitting import *

mice = ["MY_61C", "MY_61L", "MY_61R", "MY_62C", "MY_62L", "MY_62R"]
# 90-10 probabilities
dates_of_interest = ["2024-04-10", "2024-04-11", "2024-04-12", "2024-04-13", "2024-04-14", "2024-04-15", "2024-04-16", "2024-04-18", "2024-04-19", "2024-04-20", "2024-04-21"]

# 80-20 probabilities
# dates_of_interest = ["2024-04-22", "2024-04-23", "2024-04-24", "2024-04-25", "2024-04-26"]

for mouse in mice:
    sessions = getDataforSomeSessions(mouse, dates_of_interest)
    preprocessed_sessions = []
    for session in sessions:
        preprocessed_session = getPreprocessedSessionData(session)
        preprocessed_sessions.append(preprocessed_session)
    PlotSessionwithProbabilities(preprocessed_sessions[-1])

"""
dates_of_interest = ["2024-04-10", "2024-04-11", "2024-04-12", "2024-04-13", "2024-04-14", "2024-04-15", "2024-04-16", "2024-04-18", "2024-04-19", "2024-04-20", "2024-04-21"]
learning_rate = 0.05

alpha_start = -1
alpha_end = 4
alpha_sweep = np.linspace(alpha_start, alpha_end, num=50, endpoint=True).tolist()

beta_start = 10**-1
beta_end = 10**1
beta_sweep = np.logspace(np.log10(beta_start), np.log10(beta_end), num=50, endpoint=True).tolist()

parameter_sweep_dictionaries = []

for mouse in mice:
    
    sessions = getDataforSomeSessions(mouse, dates_of_interest)
    preprocessed_sessions = []
    for session in sessions:
        preprocessed_session = getPreprocessedSessionData(session)
        preprocessed_sessions.append(preprocessed_session)

    for alpha in alpha_sweep:

        for beta in beta_sweep:
        
            overall_likelihood = 0
            for session in preprocessed_sessions:
                curr_likelihood = getLikelihood(session, alpha, beta, learning_rate)
                overall_likelihood += curr_likelihood

            dictionary = {
                "alpha": alpha,
                "beta": beta,
                "learning rate": learning_rate,
                "likelihood": overall_likelihood
            }
            parameter_sweep_dictionaries.append(dictionary)

            name = mouse + "_parameter_sweep_dictionaries.pk1"

            with open(name, 'wb') as pickle_file:
                pickle.dump(parameter_sweep_dictionaries, pickle_file)
            
            print("DONE: alpha " + str(alpha) + " and beta " + str(beta))
"""